import { MarkedExtension } from "marked";
import { Page } from "./page.js";
import { ContextDataOut } from "./ctx.js";
export { load };
export type { ExcludePatterns, Extension, Options, RenderFn, ResolvedOptions };
interface RenderFn {
    (md: string, ctx?: ContextDataOut, page?: Page): Promise<Record<string, string>>;
}
interface Options {
    cssFile?: string;
    excludes?: string | string[] | ExcludePatterns;
    htmlTemplate?: string;
    renderFn?: RenderFn;
}
interface ExcludePatterns {
    serve?: string | string[];
    build: string | string[];
}
interface Extension {
    (): MarkedExtension;
}
type ResolvedOptions = Omit<Options, "htmlTemplate"> & Required<Pick<Options, "htmlTemplate">>;
declare function load(opts?: Options): Promise<ResolvedOptions>;
//# sourceMappingURL=options.d.ts.map